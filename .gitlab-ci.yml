# ruby 2.* & node latest
# image: starefossen/ruby-node

# variables:
#   JS_FOLDER: public/assets/js
#   CSS_FOLDER: public/css
#   STAGING_DOMAIN: upvote.xyz

# stages:
#   - build
#   - optimise
#   - test
#   - deploy

# before_script:
#   - ruby -v
#   - node -v

# jekyll build:
#   stage: build
#   script:
#     - gem install bundler
#     - bundle install
#     - bundle exec jekyll build --source web --destination public
#     # optismise JS
#     - npm install -g uglify-js
#     - echo "size before $(stat -c %s $JS_FOLDER/book.js)"
#     - uglifyjs --compress --mangle --pure-funcs --output $JS_FOLDER/book.js -- $JS_FOLDER/book.js
#     - echo "size after $(stat -c %s $JS_FOLDER/book.js)"
#     - echo "size before $(stat -c %s $JS_FOLDER/main.js)"
#     - uglifyjs --compress --mangle --pure-funcs --output $JS_FOLDER/main.js -- $JS_FOLDER/main.js
#     - echo "size after $(stat -c %s $JS_FOLDER/main.js)"
#     - echo "size before $(stat -c %s $JS_FOLDER/util.js)"
#     - uglifyjs --compress --mangle --pure-funcs --output $JS_FOLDER/util.js -- $JS_FOLDER/util.js
#     - echo "size after $(stat -c %s $JS_FOLDER/util.js)"
#     # optimise CSS
#     - npm install -g clean-css
#     - echo "size before $(stat -c %s $CSS_FOLDER/main.css)"
#     - cleancss -o $CSS_FOLDER/main.css $CSS_FOLDER/main.css
#     - echo "size after $(stat -c %s $CSS_FOLDER/main.css)"
#   artifacts:
#     paths:
#       - public

# deploy to staging:
#   stage: deploy
#   only: develop
#   script:
    # some kind of curl to staging domain.
    # - curl https://$STAGING_DOMAIN/api/website
